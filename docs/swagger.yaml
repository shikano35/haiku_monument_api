openapi: 3.0.3
info:
  title: 句碑 API
  version: 1.0.0
  description: |-
    このAPIは句碑の情報を提供します。

    APIの詳細については、[句碑APIドキュメント](https://example.com)をご参照ください。

servers: 
- url: "http://localhost:8787"
  description: "Local server"

tags:
  - name: "haiku-monuments"
    description: "句碑に関するAPI"
  - name: "authors"
    description: "俳人に関するAPI"
  - name: "locations"
    description: "句碑の設置場所に関するAPI"
  - name: "sources"
    description: "句碑の出典に関するAPI"
  - name: "tags"
    description: "句碑に刻まれている俳句に関するAPI"

paths:
  /haiku-monuments:
    get:
      description: "句碑の一覧を取得"
      tags:
        - "haiku-monuments"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HaikuMonuments"
  /haiku-monuments/{id}:
    get:
      description: "句碑の詳細を取得"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - "haiku-monuments"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HaikuMonuments"
  /authors:
    get:
      description: "俳人の一覧を取得"
      parameters:
        - in: query
          name: limit
          description: "取得する件数"
          schema:
            type: integer
          required: false
        - in: query
          name: offset
          description: "取得する位置"
          schema:
            type: integer
          required: false
        - in: query
          name: ordering
          description: |-
            並び替え
            * `created_at` - 作成日時の昇順
            * `-created_at` - 作成日時の降順
            * `updated_at` - 更新日時の昇順
            * `-updated_at` - 更新日時の降順
          schema:
            type: array
            items:
              type: string
              enum:
                - -created_at
                - -updated_at
                - created_at
                - updated_at
          required: false
        - in: query
          name: search
          description: "検索"
          schema:
            type: string
          required: false
        - in: query
          name: name_contains
          description: "名前に含まれる文字列"
          schema:
            type: string
          required: false
        - in: query
          name: biography_contains
          description: "俳人の情報に含まれる文字列"
          schema:
            type: string
          required: false
        - in: query
          name: created_at_gt
          description: |-
            作成日時が指定した日時以降のもの

            例: 2025-01-01 00:00:00
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: created_at_lt
          description: |-
            作成日時が指定した日時以前のもの

            例: 2025-01-01 00:00:00
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: updated_at_gt
          description: |-
            更新日時が指定した日時以降のもの

            例: 2025-01-01 00:00:00
          schema:
            type: string
            format: date-time
          required: false
        - in: query
          name: updated_at_lt
          description: |-
            更新日時が指定した日時以前のもの

            例: 2025-01-01 00:00:00
          schema:
            type: string
            format: date-time
          required: false
      tags:
        - "authors"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authors"
  /authors/{id}:
    get:
      description: "俳人の詳細を取得"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - "authors"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authors"
  /locations:
    get:
      description: "句碑の設置場所一覧を取得"
      parameters:
        - in: query
          name: limit
          description: "取得する件数"
          schema:
            type: integer
          required: false
        - in: query
          name: offset
          description: "取得する位置"
          schema:
            type: integer
          required: false
        - in: query
          name: ordering
          description: |-
            並び順
            * `prefecture` - 都道府県の昇順
            * `-prefecture` - 都道府県の降順
            * `region` - 地域の昇順
            * `-region` - 地域の降順
          schema:
            type: array
            items:
              type: string
              enum:
                - -prefecture
                - -region
                - prefecture
                - region
        - in: query
          name: prefecture
          description: "検索対象の都道府県名"
          schema:
            type: string
          required: false
        - in: query
          name: region
          description: "検索対象の地域名"
          schema:
            type: string
          required: false
      tags:
        - "locations"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"
  /locations/{id}:
    get:
      description: "句碑の設置場所を取得"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - "locations"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"
  /sources:
    get:
      description: "句碑の出典一覧を取得"
      parameters:
        - in: query
          name: limit
          description: "取得する件数"
          schema:
            type: integer
          required: false
        - in: query
          name: offset
          description: "取得する位置"
          schema:
            type: integer
          required: false
        - in: query
          name: ordering
          description: |-
            並び替え
            * `title` - タイトルの昇順
            * `-title` - タイトルの降順
            * `author` - 著者の昇順
            * `-author` - 著者の降順
            * `year` - 出版年の昇順
            * `-year` - 出版年の降順
            * `publisher` - 出版社の昇順
            * `-publisher` - 出版社の降順
            * `created_at` - 作成日時の昇順
            * `-created_at` - 作成日時の降順
            * `updated_at` - 更新日時の昇順
            * `-updated_at` - 更新日時の降順
          schema:
            type: array
            items:
              type: string
              enum:
                - -title
                - -author
                - -year
                - -publisher
                - -created_at
                - -updated_at
                - title
                - author
                - year
                - publisher
                - created_at
                - updated_at
          required: false
        - in: query
          name: search
          description: "検索"
          schema:
            type: string
          required: false
        - in: query
          name: title_contains
          description: "タイトルに含まれる文字列"
          schema:
            type: string
          required: false
        - in: query
          name: name_contains
          description: "著者に含まれる文字列"
          schema:
            type: string
          required: false
      tags:
        - "sources"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sources"
  /sources/{id}:
    get:
      description: "句碑の出典を取得"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - "sources"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sources"
  /tags:
    get:
      description: "句碑に刻まれている俳句に関する情報を取得"
      parameters:
        - in: query
          name: limit
          description: "取得する件数"
          schema:
            type: integer
          required: false
        - in: query
          name: offset
          description: "取得する位置"
          schema:
            type: integer
          required: false
        - in: query
          name: ordering
          description: |-
            並び替え
            * `name` - 名前の昇順
            * `-name` - 名前の降順
            * `description` - 説明の昇順
            * `-description` - 説明の降順
            * `id` - IDの昇順
            * `-id` - IDの降順
          schema:
            type: array
            items:
              type: string
              enum:
                - -name
                - -description
                - -id
                - name
                - description
                - id
          required: false
        - in: query
          name: search
          description: "検索"
          schema:
            type: string
          required: false
        - in: query
          name: name_contains
          description: "名前に含まれる文字列"
          schema:
            type: string
          required: false
      tags:
        - "tags"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tags"
  /tags/{id}:
    get:
      description: "句碑に刻まれている俳句に関する情報を取得"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - "tags"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tags"
  
components:
  schemas:
    HaikuMonuments:
      type: object
      properties:
        haiku_monuments:
          type: array
          items:
            $ref: "#/components/schemas/HaikuMonument"
      required:
        - haiku_monuments
    HaikuMonument:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        established_date:
          type: string
          format: date
        commentary:
          type: string
        image_url:
          type: string
          format: uri
          example: "https://example.com/image.jpg"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        authors:
          type: array
          items:
            $ref: "#/components/schemas/Authors"
        sources:
          type: array
          items:
            $ref: "#/components/schemas/Sources"
        locations:
          type: array
          items:
            $ref: "#/components/schemas/Locations"
      required:
        - id
        - text
        - established_date
        - commentary
        - image_url
        - authors
        - sources
        - locations

    Authors:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        biography:
          type: string
        links:
          type: string
        image_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - biography
        - links
        - image_url

    Locations:
      type: object
      properties:
        id:
          type: integer
        prefecture:
          type: string
        region:
          type: string
        address:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - prefecture
        - region
        - address
        - latitude
        - longitude
        - name

    Sources:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        year:
          type: integer
        url:
          type: string
        publisher:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - title
        - author
        - year
        - url
        - publisher

    Tags:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - description